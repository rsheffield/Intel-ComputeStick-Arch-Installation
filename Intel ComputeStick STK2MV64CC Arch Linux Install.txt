Intel ComputeStick STK2MV64CC Arch Linux Install
1)	Boot to ARCHISO USB stick
2)	At [root@archiso ~]# prompt
	a)	ip link
		i)	Get interface name for the wireless interface
		ii)	The interface name for my device was: 
			(1)	wlp2s0
	
	b)	ip link set {wireless_interface} up
		i)	{wireless_interface} should be replaced w/ the name of your wireless interface 
		ii)	set wireless interface to up status
	
	c)	wpa_passphrase {SSID} ‘{passphrase}’
		i)	{SSID} should be replaced by your wireless network’s SSID
		ii)	Your SSID is case sensitive
		iii)	{passphrase} should be replaced by the passphrase (aka - pre-shared key, or psk) in use on your wireless network
		iv)	The single quotes encapsulating your {passphrase} may not be required; however, they were necessary to properly parse the special characters in the passphrase on my wireless network
		v)	Generate the hash for  {passphrase} on the wireless network w/ SSID {SSID}
		vi)	This will tell you if the system is capable of properly parsing your {passphrase}
	
	d)	wpa_supplicant –B –i {wireless_interface} –c <(wpa_passphrase {SSID} ‘{passphrase}’)
		i)	{wireless_interface} should be replaced by the name of your wireless interface
		ii)	{SSID} should be replaced by your wireless network’s SSID
		iii)	Your SSID is case sensitive
		iv)	{passphrase} should be replaced by the passphrase (aka - pre-shared key, or psk) in use on your wireless network
		v)	The single quotes encapsulating your {passphrase} may not be required; however, they were necessary to properly parse the special characters in the passphrase on my wireless network
	
	e)	dhcpcd {wireless_interface}
		i)	{wireless_interface} should be replaced with the name of your wireless interface
	
	f)	ping google.com
		i)	Test to make sure that your device now has access to the Internet & can resolve hostnames
	
	g)	lsblk
		i)	Get the device name for your mmc storage media
		ii)	The device name for the mmc storage media on my ComputeStick is:
			(1)	mmcblk0
	
	h)	gdisk /dev/{mmc_storage_device_name}
		i)	{mmc_storage_device_name} should be replaced with the name of your mmc storage device
		ii)	enter ‘x’ option to access advanced options
		iii)	enter ‘z’ to zap the existing configuration
	
	i)	cgdisk /dev/{mmc_storage_device_name}
		i)	{mmc_storage_device_name} should be replaced with the name of your mmc storage device
		ii)	Configure the partitions below:
			(1)	Boot Partition
				(a)	Size = 1G
				(b)	Name = boot
				(c)	Code = EF00
			(2)	Swap Parition
				(a)	Size = 8G
					(i)	Swap size set to 2x’s RAM capacity
					(ii)	If your device has more or less than 4GB RAM, feel free to adjust swap size
					(iii)	Depending on your needs, setting a swap size less than 2x’s your RAM capacity may be beneficial; however, determining whether this would be of a benefit in your use case is beyond the scope of this document.  There are numerous discussions on the web to help you determine what size swap is best for you & if you want to use a different size swap, I encourage you to seek out these resources.
				(b)	Name = swap
				(c)	Code = 8200
			(3)	Root Partition
				(a)	Size = 20G
				(b)	Name = root
				(c)	Code = 8300
			(4)	Home Parition
				(a)	Size = 28G
					(i)	Size is set to use all the remaining space
				(b)	Name = home
				(c)	Code = 8300
	
	j)	lsblk 
		i)	Make sure that the partitions you created appear in the listing & match what you expect to see based on the configuration steps performed above
	
	k)	mkfs.fat –F32 /dev/{mmc_storage_device_name_boot_paritition_number}
		i)	{mmc_storage_device_name_boot_partition_number} should be replaced with the name of your mmc storage device with your boot partition number appended
		ii)	By following the procedure above, my {mmc_storage_device_name_boot_partition_number} was replaced by mmcblk0p1
	
	l)	mkswap /dev/{mmc_storage_device_name_swap_parition_number}
		i)	{mmc_storage_device_name_swap_partition_number) should be replaced with the name of your mmc storage device with your swap partition number appended
		ii)	By following the procedure above, my {mmc_storage_device_name_swap_partition_number} was replaced by mmcblk0p2
	
	m)	swapon /dev/{mmc_storage_device_name_swap_parition_number}
		i)	{mmc_storage_device_name_swap_partition_number) should be replaced with the name of your mmc storage device with your swap partition number appended
		ii)	By following the procedure above, my {mmc_storage_device_name_swap_partition_number} was replaced by mmcblk0p2
	
	n)	mkfs.ext4 /dev/{mmc_storage_device_name_root_partition_number}
		i)	{mmc_storage_device_name_root_partition_number} should be replaced with the name of your mmc storage device with your root partition number appended
		ii)	By following the procedure above, my {mmc_storage_device_name_root_partition_number} was replaced by mmcblk0p3
	
	o)	mkfs.ext4 /dev/{mmc_storage_device_name_home_partition_number}
		i)	{mmc_storage_device_name_home_partition_number} should be replaced with the name of your mmc storage device with your home partition number appended
		ii)	By following the procedure above, my {mmc_storage_device_name_home_partition_number} was replaced by mmcblk0p4
	
	p)	mount /dev/{mmc_storage_device_name_root_partition_number} /mnt
		i)	{mmc_storage_device_name_root_partition_number} should be replaced with the name of your mmc storage device with your root partition number appended
		ii)	By following the procedure above, my {mmc_storage_device_name_root_partition_number} was replaced by mmcblk0p3
	
	q)	mkdir /mnt/boot
	
	r)	mkdir /mnt/home
	
	s)	mount /dev/{mmc_storage_device_name_boot_partition_number} /mnt/boot
		i)	{mmc_storage_device_name_boot_partition_number} should be replaced with the name of your mmc storage device with your boot partition number appended
		ii)	By following the procedure above, my {mmc_storage_device_name_boot_partition_number} was replaced by mmcblk0p1
	
	t)	mount /dev/{mmc_storage_device_name_home_partition_number} /mnt/home
		i)	{mmc_storage_device_name_home_partition_number} should be replaced with the name of your mmc storage device with your home partition number appended
		ii)	By following the procedure above, my {mmc_storage_device_name_home_partition_number} was replaced by mmcblk0p4
	
	u)	cp /etc/pacman.d/mirrorlist /etc/pacman.d/mirrorlist.original
	
	v)	cp /etc/pacman.d/mirrorlist /etc/pacman.d/mirrorlist.backup
	
	w)	sed –i ‘s/^#Server/Server/’ /etc/pacman.d/mirrorlist.backup
	
	x)	rankmirrors –n 6 /etc/pacman.d/mirrorlist.backup > /etc/pacman.d/mirrorlist
	
	y)	pacstrap –i /mnt base base-devel
		i)	accept defaults & install
	
	z)	genfstab –U –p /mnt >> /mnt/etc/fstab
	
	aa)	cat /mnt/etc/fstab
		i)	make sure that the output makes sense
	
	bb)	arch-chroot /mnt
	
	cc)	nano /etc/locale.gen
		i)	uncomment the line that matches your localization
		ii)	for me, this was the line for: en_US.UTF-8
		iii)	save & exit
	
	dd)	locale-gen
	
	ee)	echo LANG=en_US.UTF-8 > /etc/locale.conf
	
	ff)	export LANG=en_US.UTF-8
	
	gg)	cd /usr/share/zoneinfo/{country}
		i)	{country} should be replaced by your country of residence
		ii)	For me, {country} was replaced by America
	
	hh)	ln –sf /usr/share/zoneinfo/{country}/{city} /etc/localtime
		i)	{country} should be replaced by your country of residence
		ii)	For me, {country} was replaced by America
		iii)	{city} should be replaced by a city in the same timezone in which you live
		iv)	For me, {city} was replaced by Chicago, for the Central Time Zone
	
	ii)	hwclock --systohc
	
	jj)	echo {hostname} > /etc/hostname
		i)	{hostname} should be replaced by the hostname that you would like your ComputeStick to use when identifying itself on the network
	
	kk)	nano /etc/pacman.conf
		i)	Uncomment the section for [Multilib]
			(1)	[Multilib]
			(2)	Include = /etc/pacman.d/mirrorlist
		ii)	Save & exit
	
	ll)	pacman –Syu
	
	mm)	passwd
		i)	set the password you would like for the root user of your new arch install
	
	nn)	useradd –m –g users –G wheel,storage,power –s /bin/bash {user}
		i)	{user} should be replaced with the username you want as your login account of your new arch install
			(1)	You can add as many users as needed
	
	oo)	passwd {user}
		i)	set the password for your login account(s)
		ii)	{user} should be replaced with the username you created in the previous step
		iii)	This should be repeated for each user you created if you created more than one login account
	
	pp)	EDITOR=nano visudo
		i)	uncomment the line for %wheel ALL=(ALL) ALL to allow all members of the wheel group to elevate their privileges to root by using sudo
		ii)	immediately below add the line Defaults rootpw to require members of the wheel group to know the root password to elevate their privileges to root by using sudo
		iii)	save & quit
	
	qq)	mount –t efivarfs efivarfs /sys/firmware/efi/efivars
		i)	this is just to double check to make sure that your efi variables are loaded, confirming that your ComputeStick is configured for EFI boot
	
	rr)	bootctl install
	
	ss)	blkid -s PARTUUID –o value /dev/{mmc_storage_device_name_root_partition_number}
		i)	{mmc_storage_device_name_root_partition_number} should be replaced with the name of your mmc storage device with your root partition number appended
		ii)	By following the procedure above, my {mmc_storage_device_name_root_partition_number} was replaced by mmcblk0p3
		iii)	Write down the PARTUUID output to the console
	
	tt)	pacman –S intel-ucode
		i)	Accept defaults & install
	
	uu)	nano /boot/loader/entries/arch.conf
		i)	Add the configuration below:
			(1)	title Arch Linux
			(2)	linux /vmlinuz-linux
			(3)	initrd /intel-ucode.img
			(4)	initrd /initramfs.img
			(5)	options root=PARTUUID={PARTUUID} rw
				(a)	{PARTUUID} should be replaced by the PARTUUID that you wrote down earlier
	
	vv)	exit
		i)	exit the new install
	
	ww)	reboot
		i)	remove Arch installation media after the OS unloads & before boot
